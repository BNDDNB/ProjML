{"nbformat_minor": 2, "cells": [{"execution_count": 1, "cell_type": "code", "source": "from pyspark.sql.types import *\n\nflightSchema = StructType([\n    StructField(\"DayofMonth\",IntegerType(),False),\n    StructField(\"DayofWeek\",IntegerType(),False),\n    StructField(\"Carrier\",StringType(),False),\n    StructField(\"OriginAirportID\",IntegerType(),False),\n    StructField(\"DestAirportID\", IntegerType(),False),\n    StructField(\"DepDelay\", IntegerType(),False),\n    StructField(\"ArrDelay\",IntegerType(),False),\n])\n\nflights = spark.read.csv('wasb:///data/raw-flight-data.csv', schema=flightSchema, header=True)", "outputs": [{"output_type": "stream", "name": "stdout", "text": "Starting Spark application\n"}, {"output_type": "display_data", "data": {"text/plain": "<IPython.core.display.HTML object>", "text/html": "<table>\n<tr><th>ID</th><th>YARN Application ID</th><th>Kind</th><th>State</th><th>Spark UI</th><th>Driver log</th><th>Current session?</th></tr><tr><td>4</td><td>application_1516029531965_0008</td><td>pyspark3</td><td>idle</td><td><a target=\"_blank\" href=\"http://hn1-spk012.zi1mhgvoalbuxhlxjrtncoyukd.bx.internal.cloudapp.net:8088/proxy/application_1516029531965_0008/\">Link</a></td><td><a target=\"_blank\" href=\"http://10.0.0.7:30060/node/containerlogs/container_1516029531965_0008_01_000001/livy\">Link</a></td><td>\u2714</td></tr></table>"}, "metadata": {}}, {"output_type": "stream", "name": "stdout", "text": "SparkSession available as 'spark'.\n"}], "metadata": {"collapsed": false}}, {"execution_count": 3, "cell_type": "code", "source": "flights.describe().show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+-------+-----------------+------------------+-------+-----------------+------------------+-----------------+-----------------+\n|summary|       DayofMonth|         DayofWeek|Carrier|  OriginAirportID|     DestAirportID|         DepDelay|         ArrDelay|\n+-------+-----------------+------------------+-------+-----------------+------------------+-----------------+-----------------+\n|  count|          2719418|           2719418|2719418|          2719418|           2719418|          2691974|          2690385|\n|   mean|15.79747468024408|3.8983907586108497|   null|12742.26441172339|12742.455345592329|10.53686662649788| 6.63768791455498|\n| stddev|8.799860168985413|1.9859881390373355|   null|1501.972939702572|  1501.96925289278|36.09952806643145|38.64881489390094|\n|    min|                1|                 1|     9E|            10140|             10140|              -63|              -94|\n|    max|               31|                 7|     YV|            15376|             15376|             1863|             1845|\n+-------+-----------------+------------------+-------+-----------------+------------------+-----------------+-----------------+"}], "metadata": {"scrolled": true, "collapsed": false}}, {"execution_count": 2, "cell_type": "code", "source": "flights.count()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "2719418"}], "metadata": {"collapsed": false}}, {"execution_count": 4, "cell_type": "code", "source": "flights.describe().select(\"summary\",\"ArrDelay\",\"DepDelay\").show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+-------+-----------------+-----------------+\n|summary|         ArrDelay|         DepDelay|\n+-------+-----------------+-----------------+\n|  count|          2690385|          2691974|\n|   mean| 6.63768791455498|10.53686662649788|\n| stddev|38.64881489390095|36.09952806643145|\n|    min|              -94|              -63|\n|    max|             1845|             1863|\n+-------+-----------------+-----------------+"}], "metadata": {"collapsed": false}}, {"execution_count": 5, "cell_type": "code", "source": "flights.count() - flights.dropDuplicates().count()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "22435"}], "metadata": {"collapsed": false}}, {"execution_count": 7, "cell_type": "code", "source": "flights.count()-flights.dropDuplicates().dropna(how=\"any\", subset=[\"ArrDelay\",\"DepDelay\"]).count()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "46233"}], "metadata": {"collapsed": false}}, {"execution_count": 8, "cell_type": "code", "source": "data=flights.dropDuplicates().fillna(value=0, subset=[\"ArrDelay\",\"DepDelay\"])\ndata.count()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "2696983"}], "metadata": {"collapsed": false}}, {"execution_count": 9, "cell_type": "code", "source": "data.corr(\"DepDelay\",\"ArrDelay\")", "outputs": [{"output_type": "stream", "name": "stdout", "text": "0.9392630367706966"}], "metadata": {"collapsed": false}}, {"execution_count": 2, "cell_type": "code", "source": "flights.show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+----------+---------+-------+---------------+-------------+--------+--------+\n|DayofMonth|DayofWeek|Carrier|OriginAirportID|DestAirportID|DepDelay|ArrDelay|\n+----------+---------+-------+---------------+-------------+--------+--------+\n|        19|        5|     DL|          11433|        13303|      -3|       1|\n|        19|        5|     DL|          14869|        12478|       0|      -8|\n|        19|        5|     DL|          14057|        14869|      -4|     -15|\n|        19|        5|     DL|          15016|        11433|      28|      24|\n|        19|        5|     DL|          11193|        12892|      -6|     -11|\n|        19|        5|     DL|          10397|        15016|      -1|     -19|\n|        19|        5|     DL|          15016|        10397|       0|      -1|\n|        19|        5|     DL|          10397|        14869|      15|      24|\n|        19|        5|     DL|          10397|        10423|      33|      34|\n|        19|        5|     DL|          11278|        10397|     323|     322|\n|        19|        5|     DL|          14107|        13487|      -7|     -13|\n|        19|        5|     DL|          11433|        11298|      22|      41|\n|        19|        5|     DL|          11298|        11433|      40|      20|\n|        19|        5|     DL|          11433|        12892|      -2|      -7|\n|        19|        5|     DL|          10397|        12451|      71|      75|\n|        19|        5|     DL|          12451|        10397|      75|      57|\n|        19|        5|     DL|          12953|        10397|      -1|      10|\n|        19|        5|     DL|          11433|        12953|      -3|     -10|\n|        19|        5|     DL|          10397|        14771|      31|      38|\n|        19|        5|     DL|          13204|        10397|       8|      25|\n+----------+---------+-------+---------------+-------------+--------+--------+\nonly showing top 20 rows"}], "metadata": {"scrolled": true, "collapsed": false}}, {"execution_count": 3, "cell_type": "code", "source": "airports = spark.read.csv('wasb:///data/airports.csv', header=True, inferSchema=True)\nairports.show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+----------+-----------+-----+--------------------+\n|airport_id|       city|state|                name|\n+----------+-----------+-----+--------------------+\n|     10165|Adak Island|   AK|                Adak|\n|     10299|  Anchorage|   AK|Ted Stevens Ancho...|\n|     10304|      Aniak|   AK|       Aniak Airport|\n|     10754|     Barrow|   AK|Wiley Post/Will R...|\n|     10551|     Bethel|   AK|      Bethel Airport|\n|     10926|    Cordova|   AK|Merle K Mudhole S...|\n|     14709|  Deadhorse|   AK|   Deadhorse Airport|\n|     11336| Dillingham|   AK|  Dillingham Airport|\n|     11630|  Fairbanks|   AK|Fairbanks Interna...|\n|     11997|   Gustavus|   AK|    Gustavus Airport|\n|     12523|     Juneau|   AK|Juneau International|\n|     12819|  Ketchikan|   AK|Ketchikan Interna...|\n|     10245|King Salmon|   AK| King Salmon Airport|\n|     10170|     Kodiak|   AK|      Kodiak Airport|\n|     13970|   Kotzebue|   AK| Ralph Wien Memorial|\n|     13873|       Nome|   AK|        Nome Airport|\n|     14256| Petersburg|   AK|Petersburg James ...|\n|     14828|      Sitka|   AK|Sitka Rocky Gutie...|\n|     12807| St. Mary's|   AK|  St. Mary's Airport|\n|     11445|   Unalaska|   AK|    Unalaska Airport|\n+----------+-----------+-----+--------------------+\nonly showing top 20 rows"}], "metadata": {"scrolled": true, "collapsed": false}}, {"execution_count": 4, "cell_type": "code", "source": "airports.printSchema()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "root\n |-- airport_id: integer (nullable = true)\n |-- city: string (nullable = true)\n |-- state: string (nullable = true)\n |-- name: string (nullable = true)"}], "metadata": {"collapsed": false}}, {"execution_count": 6, "cell_type": "code", "source": "cities = airports.select(\"city\",\"name\")\ncities.show(truncate=False)", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+-----------+-----------------------------------+\n|city       |name                               |\n+-----------+-----------------------------------+\n|Adak Island|Adak                               |\n|Anchorage  |Ted Stevens Anchorage International|\n|Aniak      |Aniak Airport                      |\n|Barrow     |Wiley Post/Will Rogers Memorial    |\n|Bethel     |Bethel Airport                     |\n|Cordova    |Merle K Mudhole Smith              |\n|Deadhorse  |Deadhorse Airport                  |\n|Dillingham |Dillingham Airport                 |\n|Fairbanks  |Fairbanks International            |\n|Gustavus   |Gustavus Airport                   |\n|Juneau     |Juneau International               |\n|Ketchikan  |Ketchikan International            |\n|King Salmon|King Salmon Airport                |\n|Kodiak     |Kodiak Airport                     |\n|Kotzebue   |Ralph Wien Memorial                |\n|Nome       |Nome Airport                       |\n|Petersburg |Petersburg James A Johnson         |\n|Sitka      |Sitka Rocky Gutierrez              |\n|St. Mary's |St. Mary's Airport                 |\n|Unalaska   |Unalaska Airport                   |\n+-----------+-----------------------------------+\nonly showing top 20 rows"}], "metadata": {"collapsed": false}}, {"execution_count": 10, "cell_type": "code", "source": "flightsByOrigin = flights.join(airports,flights.OriginAirportID == airports.airport_id).groupBy(\"city\").count()\nflightsByOrigin.show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+-----------------+------+\n|             city| count|\n+-----------------+------+\n|          Phoenix| 90281|\n|            Omaha| 13537|\n|   Raleigh/Durham| 28436|\n|        Anchorage|  7777|\n|           Dallas| 19503|\n|          Oakland| 25503|\n|      San Antonio| 23090|\n|     Philadelphia| 47659|\n|       Louisville| 10953|\n|      Los Angeles|118684|\n|Dallas/Fort Worth|105024|\n|       Sacramento| 25193|\n|     Indianapolis| 18099|\n|        Cleveland| 25261|\n|        San Diego| 45783|\n|    San Francisco| 84675|\n|        Nashville| 34927|\n|    Oklahoma City| 13967|\n|          Detroit| 62879|\n|         Portland| 30640|\n+-----------------+------+\nonly showing top 20 rows"}], "metadata": {"collapsed": false}}, {"execution_count": 11, "cell_type": "code", "source": "airports.createOrReplaceTempView(\"airportData\")", "outputs": [], "metadata": {"collapsed": true}}, {"execution_count": 13, "cell_type": "code", "source": "spark.sql(\"SELECT state, COUNT(*) AS airports FROM airportData GROUP BY state ORDER BY state\").show()", "outputs": [{"output_type": "stream", "name": "stdout", "text": "+--------------------+--------+\n|               state|airports|\n+--------------------+--------+\n|                  AK|      22|\n|                  AL|       5|\n|                  AR|       4|\n|                  AZ|       5|\n|                  CA|      32|\n|                  CO|      11|\n|                  CT|       2|\n|                  DC|       2|\n|                  DE|       1|\n|                  FL|      20|\n|Federated States ...|       1|\n|                  GA|       8|\n|                  HI|       7|\n|                  IA|       5|\n|                  ID|       6|\n|                  IL|       8|\n|                  IN|       4|\n|                  KS|       4|\n|                  KY|       3|\n|                  LA|       7|\n+--------------------+--------+\nonly showing top 20 rows"}], "metadata": {"collapsed": false}}, {"execution_count": 11, "cell_type": "code", "source": "data.createOrReplaceTempView(\"flightData\")", "outputs": [], "metadata": {"collapsed": true}}, {"execution_count": 12, "cell_type": "code", "source": "%%sql\nSELECT DepDelay, ArrDelay FROM flightData", "outputs": [{"ename": "AttributeError", "evalue": "'module' object has no attribute 'api'", "traceback": ["\u001b[1;31m\u001b[0m", "\u001b[1;31mAttributeError\u001b[0mTraceback (most recent call last)", "\u001b[1;32m/usr/bin/anaconda/lib/python2.7/site-packages/IPython/core/formatters.pyc\u001b[0m in \u001b[0;36m__call__\u001b[1;34m(self, obj)\u001b[0m\n\u001b[0;32m    902\u001b[0m                 \u001b[1;32mpass\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    903\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 904\u001b[1;33m                 \u001b[0mprinter\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    905\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mTrue\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    906\u001b[0m             \u001b[1;31m# Finally look for special method names\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n", "\u001b[1;32m/usr/bin/anaconda/lib/python2.7/site-packages/autovizwidget/widget/utils.pyc\u001b[0m in \u001b[0;36mdisplay_dataframe\u001b[1;34m(df)\u001b[0m\n\u001b[0;32m    114\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    115\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_dataframe\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 116\u001b[1;33m     \u001b[0mselected_x\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mselect_x\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    117\u001b[0m     \u001b[0mselected_y\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mselect_y\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mselected_x\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    118\u001b[0m     encoding = Encoding(chart_type=Encoding.chart_type_table, x=selected_x, y=selected_y,\n", "\u001b[1;32m/usr/bin/anaconda/lib/python2.7/site-packages/autovizwidget/widget/utils.pyc\u001b[0m in \u001b[0;36mselect_x\u001b[1;34m(data, order)\u001b[0m\n\u001b[0;32m     70\u001b[0m         \u001b[0m_validate_custom_order\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0morder\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     71\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 72\u001b[1;33m     \u001b[0md\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_classify_data_by_type\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0morder\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     73\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     74\u001b[0m     \u001b[0mchosen_x\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mNone\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n", "\u001b[1;32m/usr/bin/anaconda/lib/python2.7/site-packages/autovizwidget/widget/utils.pyc\u001b[0m in \u001b[0;36m_classify_data_by_type\u001b[1;34m(data, order, skip)\u001b[0m\n\u001b[0;32m     48\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mcolumn_name\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     49\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mcolumn_name\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mskip\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 50\u001b[1;33m             \u001b[0mtyp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0minfer_vegalite_type\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mcolumn_name\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     51\u001b[0m             \u001b[0md\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtyp\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcolumn_name\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     52\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n", "\u001b[1;32m/usr/bin/anaconda/lib/python2.7/site-packages/autovizwidget/widget/utils.pyc\u001b[0m in \u001b[0;36minfer_vegalite_type\u001b[1;34m(data)\u001b[0m\n\u001b[0;32m     14\u001b[0m     \"\"\"\n\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 16\u001b[1;33m     \u001b[0mtyp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mapi\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtypes\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minfer_dtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     17\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     18\u001b[0m     if typ in ['floating', 'mixed-integer-float', 'integer',\n", "\u001b[1;31mAttributeError\u001b[0m: 'module' object has no attribute 'api'"], "output_type": "error"}, {"execution_count": 12, "output_type": "execute_result", "data": {"text/plain": "      DepDelay  ArrDelay\n0            1         0\n1            1        -6\n2           -4       -49\n3           59        58\n4           -2       -25\n5            6        -8\n6           -7       -18\n7           -4       -22\n8           -8       -29\n9           66        50\n10          -6         0\n11          -3       -19\n12          -2       -31\n13          -2        -2\n14           1         1\n15          -4       -10\n16          11       -22\n17          -3       -12\n18          88        76\n19          -8       -22\n20          -3       -13\n21          14        21\n22           0         0\n23          -6        -2\n24          -3        -3\n25          -4       -12\n26           0       -16\n27           5         1\n28          -3       -23\n29          -9       -14\n...        ...       ...\n2470        30        24\n2471        78        69\n2472         2         5\n2473         1        -9\n2474        -2         0\n2475        -8       -11\n2476         5         2\n2477        -2        -8\n2478       -10       -16\n2479        68        45\n2480        -6       -16\n2481       144       149\n2482         4        23\n2483       116       100\n2484         1        -7\n2485        -6       -16\n2486        24        18\n2487        27        47\n2488        -1         3\n2489        27        37\n2490        -4         3\n2491        -1        -6\n2492        -3         1\n2493        -2         2\n2494        -7       -15\n2495        -5        -2\n2496       -10        29\n2497         0         0\n2498        -4       -12\n2499         3         6\n\n[2500 rows x 2 columns]", "text/html": "<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DepDelay</th>\n      <th>ArrDelay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>-6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-4</td>\n      <td>-49</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>59</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-2</td>\n      <td>-25</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>-7</td>\n      <td>-18</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>-4</td>\n      <td>-22</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>-8</td>\n      <td>-29</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>66</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>-6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>-3</td>\n      <td>-19</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>-2</td>\n      <td>-31</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>-2</td>\n      <td>-2</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>-4</td>\n      <td>-10</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>11</td>\n      <td>-22</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>-3</td>\n      <td>-12</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>88</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>-8</td>\n      <td>-22</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>-3</td>\n      <td>-13</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>14</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>-6</td>\n      <td>-2</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>-3</td>\n      <td>-3</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>-4</td>\n      <td>-12</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0</td>\n      <td>-16</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>-3</td>\n      <td>-23</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>-9</td>\n      <td>-14</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2470</th>\n      <td>30</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>2471</th>\n      <td>78</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>2472</th>\n      <td>2</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2473</th>\n      <td>1</td>\n      <td>-9</td>\n    </tr>\n    <tr>\n      <th>2474</th>\n      <td>-2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2475</th>\n      <td>-8</td>\n      <td>-11</td>\n    </tr>\n    <tr>\n      <th>2476</th>\n      <td>5</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2477</th>\n      <td>-2</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>2478</th>\n      <td>-10</td>\n      <td>-16</td>\n    </tr>\n    <tr>\n      <th>2479</th>\n      <td>68</td>\n      <td>45</td>\n    </tr>\n    <tr>\n      <th>2480</th>\n      <td>-6</td>\n      <td>-16</td>\n    </tr>\n    <tr>\n      <th>2481</th>\n      <td>144</td>\n      <td>149</td>\n    </tr>\n    <tr>\n      <th>2482</th>\n      <td>4</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>2483</th>\n      <td>116</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>2484</th>\n      <td>1</td>\n      <td>-7</td>\n    </tr>\n    <tr>\n      <th>2485</th>\n      <td>-6</td>\n      <td>-16</td>\n    </tr>\n    <tr>\n      <th>2486</th>\n      <td>24</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>2487</th>\n      <td>27</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>2488</th>\n      <td>-1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2489</th>\n      <td>27</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>2490</th>\n      <td>-4</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2491</th>\n      <td>-1</td>\n      <td>-6</td>\n    </tr>\n    <tr>\n      <th>2492</th>\n      <td>-3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2493</th>\n      <td>-2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2494</th>\n      <td>-7</td>\n      <td>-15</td>\n    </tr>\n    <tr>\n      <th>2495</th>\n      <td>-5</td>\n      <td>-2</td>\n    </tr>\n    <tr>\n      <th>2496</th>\n      <td>-10</td>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>2497</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2498</th>\n      <td>-4</td>\n      <td>-12</td>\n    </tr>\n    <tr>\n      <th>2499</th>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n<p>2500 rows \u00d7 2 columns</p>\n</div>"}, "metadata": {}}], "metadata": {"collapsed": false}}, {"execution_count": null, "cell_type": "code", "source": "", "outputs": [], "metadata": {"collapsed": true}}, {"execution_count": null, "cell_type": "code", "source": "", "outputs": [], "metadata": {"collapsed": true}}], "nbformat": 4, "metadata": {"kernelspec": {"display_name": "PySpark3", "name": "pyspark3kernel", "language": ""}, "language_info": {"mimetype": "text/x-python", "pygments_lexer": "python3", "name": "pyspark3", "codemirror_mode": {"version": 3, "name": "python"}}}}